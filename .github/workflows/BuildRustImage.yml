name: Build Rust Stable Image

on:
  workflow_dispatch:
    #inputs:
    #  toolchain:
    #    description: 'Specify the Rust toolchain version'
    #    required: true
    #    default: '1.78.0'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_PREFIX: ci-rust
  DEFAULT_TOOLCHAIN: 1.78.0
  REGISTRY: ghcr.io/${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Ensure rustfmt is installed and setup problem matcher
      #- name: Check Rust toolchain version exists
      #  id: check-toolchain
      #  uses: actions-rust-lang/setup-rust-toolchain@v1
      #  with:
      #    toolchain: ${{ github.event.inputs.toolchain }}
      #  continue-on-error: true

      #- name: Fail if toolchain version does not exist
      #  if: steps.check-toolchain.outcome != 'success'
      #  run: |
      #    echo "Toolchain version ${{ github.event.inputs.toolchain }} does not exist."
      #    exit 1

      - name: Log in to the github container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: scripts/docker-rust
          file: scripts/docker-rust/rust_ci.Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}:${{ env.DEFAULT_TOOLCHAIN }}
          build-args: |
            DEFAULT_TOOLCHAIN=${{ env.DEFAULT_TOOLCHAIN }}
          #tags: |
          #  ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}:${{ github.event.inputs.toolchain }}
          #  ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}:latest
          #build-args: |
          #  DEFAULT_TOOLCHAIN=${{ github.event.inputs.toolchain }}

type TokenMetadata = struct {
  title: opt str,
  description: opt str,
  media: opt str,
  reference: opt str,
};

type State = struct {
  owner_id: actor_id,
  contract_id: actor_id,
  name: str,
  description: str,
  ticket_ft_id: u256,
  creator: actor_id,
  number_of_tickets: u256,
  tickets_left: u256,
  date: u128,
  buyers: vec actor_id,
  id_counter: u256,
  concert_id: u256,
  running: bool,
  /// user to token id to metadata
  metadata: vec struct { actor_id, vec struct { u256, opt TokenMetadata } },
  token_id: u256,
};

constructor {
  New : (owner_id: actor_id, vmt_contract: actor_id);
};

service Concert {
  BuyTickets : (amount: u256, mtd: vec opt TokenMetadata) -> null;
  Create : (creator: actor_id, name: str, description: str, number_of_tickets: u256, date: u128, token_id: u256) -> null;
  HoldConcert : () -> null;
  query GetStorage : () -> State;

  events {
    Creation: struct { creator: actor_id, concert_id: u256, number_of_tickets: u256, date: u128 };
    Hold: struct { concert_id: u256 };
    Purchase: struct { concert_id: u256, amount: u256 };
  }
};

